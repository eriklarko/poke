// Mocks generated by Mockito 5.4.2 from annotations
// in poke/test/components/reminder_list/reminder_list_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:poke/components/reminder_list/reminder_service.dart' as _i3;
import 'package:poke/models/action.dart' as _i5;
import 'package:poke/models/reminder.dart' as _i2;
import 'package:poke/persistence/serializable_event_data.dart' as _i6;
import 'package:poke/predictor/predictor.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeReminder_0 extends _i1.SmartFake implements _i2.Reminder {
  _FakeReminder_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ReminderService].
///
/// See the documentation for Mockito's code generation for more information.
class MockReminderService extends _i1.Mock implements _i3.ReminderService {
  @override
  _i4.Future<List<_i2.Reminder>> buildReminders() => (super.noSuchMethod(
        Invocation.method(
          #buildReminders,
          [],
        ),
        returnValue: _i4.Future<List<_i2.Reminder>>.value(<_i2.Reminder>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i2.Reminder>>.value(<_i2.Reminder>[]),
      ) as _i4.Future<List<_i2.Reminder>>);

  @override
  _i2.Reminder buildReminder(_i5.Action<_i6.SerializableEventData?>? action) =>
      (super.noSuchMethod(
        Invocation.method(
          #buildReminder,
          [action],
        ),
        returnValue: _FakeReminder_0(
          this,
          Invocation.method(
            #buildReminder,
            [action],
          ),
        ),
        returnValueForMissingStub: _FakeReminder_0(
          this,
          Invocation.method(
            #buildReminder,
            [action],
          ),
        ),
      ) as _i2.Reminder);

  @override
  _i4.Stream<_i3.ReminderUpdate> updatesStream() => (super.noSuchMethod(
        Invocation.method(
          #updatesStream,
          [],
        ),
        returnValue: _i4.Stream<_i3.ReminderUpdate>.empty(),
        returnValueForMissingStub: _i4.Stream<_i3.ReminderUpdate>.empty(),
      ) as _i4.Stream<_i3.ReminderUpdate>);
}

/// A class which mocks [Predictor].
///
/// See the documentation for Mockito's code generation for more information.
class MockPredictor extends _i1.Mock implements _i7.Predictor {
  @override
  DateTime? predictNext(_i5.Action<_i6.SerializableEventData?>? action) =>
      (super.noSuchMethod(
        Invocation.method(
          #predictNext,
          [action],
        ),
        returnValueForMissingStub: null,
      ) as DateTime?);
}
